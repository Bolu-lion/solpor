@page "/admin"
@using SolutionPortalBeta.Shared;
@inject NavigationManager _nav
@*@using SolutionPortal.Shared*@
@inject HttpClient _httpClient

@*<button class="btn btn-primary" @onclick="moveto">FAQs</button>*@
<div class="containerm">
    <Sidebar/>
    <main>
        <div class="top bckgm"><div class="title">Dashboard</div></div>
        <div class="insights">
            <div class="sales">
                <span class="material-symbols-outlined">
                    analytics
                </span>
                <div class="middle">
                    <div class="left">
                        <h1>Total Complaints</h1>
                        <h3>@complaintList.Count() </h3>
                    </div>

                </div>
                <small class="text-muted">Last 24 Hours</small>
            </div>
            <!------------------END OF SALES------------------>
            <div class="expenses">
                <span class="material-symbols-outlined">
                    priority_high
                </span>
                <div class="middle">
                    <div class="left">
                        <h1>Unresolved Complaints</h1>
                        <h3>@complaintList.Count(t => !t.IsCompleted)</h3>
                    </div>

                </div>
                <small class="text-muted">Last 24 Hours</small>
            </div>
            <!------------------END OF EXPENSES------------------>
            <div class="income">
                <span class="material-symbols-outlined">
                    done
                </span>
                <div class="middle">
                    <div class="left">
                        <h1>Resolved Complaints</h1>
                        <h3>@complaintList.Count(t => t.IsCompleted)</h3>
                    </div>
                </div>
                <small class="text-muted">Last 24 Hours</small>
            </div>
            <!------------------END OF INCOME------------------>
        </div>
        <div class="recent-orders">
            <div class="top bckgmt"><div class="title">Recent Orders</div></div>
            <table>
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Complaint Description</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                   @foreach (var p in complaintList.OrderByDescending(p => p.Id).Take(5))
                    {
                        <tr>
                            <td>@p.Product</td>
                            <td>@p.Description</td>
                            <td class="warning">@CheckStatus(p.IsCompleted)</td>
                            <td class="primary"><a href="#">Details</a></td>
                        </tr>
                    
                    }

                </tbody>
            </table>
            <a href="complaintlist">Show All</a>
           
        </div>
    </main>
    <!-------------END OF MAIN---------->

</div>

@code {
    List<UserCompliantModel> complaintList = new List<UserCompliantModel>();

    protected override async Task OnInitializedAsync()
    {

        var response = await _httpClient.GetAsync("api/UserComplaint/");
        complaintList = await response.Content.ReadFromJsonAsync<List<UserCompliantModel>>();
    }

    private string CheckStatus(bool Status)
    {
        if (Status)
        {
            return "Resolved";
        }
        else
        {
            return "Pending";
        }
    }

    public void moveto()
    {
        _nav.NavigateTo("faqlist");
    }

    public async Task GetCompliantsByDate(DateTime SelectedDate)
    {
        var response = await _httpClient.GetAsync("api/UserComplaint/" + SelectedDate);
        complaintList = await response.Content.ReadFromJsonAsync<List<UserCompliantModel>>();
    }
}