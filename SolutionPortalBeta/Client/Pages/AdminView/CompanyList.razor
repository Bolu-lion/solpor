@page "/companies"
@using SolutionPortalBeta.Shared;
@inject HttpClient _httpClient
@inject NavigationManager _nav

<div class="admin-main">
    <Sidebar />
    @if(viewCreateModal){<CreateCompany/>}
    @if(viewModal){<ViewCompany companyId="@companyId" companyName="@companyName" companyAlias="@companyAlias"/>}
    @if(viewDeptModal){<CreateDepartment id="@companyId"/>}
    <div class="company-container">
        <h1 class="title">Company List</h1>
        <div class="create-btn">
            <button @onclick="setCreateModal">Create Company</button>
        </div>
        <div class="company-list">
            @foreach (var company in companies.OrderBy(company => company.id))
            {
                <div class="company" @onclick="()=>setViewModal(company.id, company.Name, company.Alias)">
                    <h3>@company.Name</h3>
                    <div class="manage-comp">
<<<<<<< Updated upstream
                        <a class="mg-btn" @onclick="()=>setDeptModal(company.id)">Add Department</a>
                        <a class="mg-btn" >Manage Company</a>
=======
                        <a class="mg-btn" href="createdepartment/@company.Name/@company.id">Add Department</a>
                        <a class="mg-btn" href="updatecompany/@company.id">Update Company</a>
                        <a class="mg-btn-d" href="deletecompany/@company.id">Delete Company</a>
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
                    </div>
                </div>
            }
            
        </div>
    </div>
</div>  
@code {
    public int companyId { get; set; }
    public string companyName { get; set; }
    public string companyAlias { get; set; }
    List<CompanyModel> companies = new List<CompanyModel>();
    public void gotocreate()
    {
        _nav.NavigateTo("createcompany");
    }
    protected override async Task OnInitializedAsync()
    {
        var response = await _httpClient.GetAsync("api/Company/");
        companies = await response.Content.ReadFromJsonAsync<List<CompanyModel>>();
    }
    public bool viewCreateModal = false;
    public bool viewModal = false;
    public bool viewDeptModal = false;
    public void setCreateModal(){
        viewCreateModal = !viewCreateModal;
    }
    public void setViewModal(int id, string name, string alias){
        viewModal = !viewModal;
        companyId = id;
        companyName = name;
        companyAlias = alias;
    }
    public void setDeptModal(int id){
        viewDeptModal = !viewDeptModal;
        companyId = id;
    }
}

@* href="createdepartment/@company.Name/@company.id"  *@