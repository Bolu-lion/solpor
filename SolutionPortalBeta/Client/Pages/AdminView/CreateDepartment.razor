@page "/createdepartment/{companyName}/{id:int}"
@inject IJSRuntime JSRuntime
@using SolutionPortalBeta.Shared
@inject HttpClient Http
@inject IDepartmentService DepartmentService

<div class="containerd">
    <div class="top bckgmt"><div class="title">Create Department</div></div>
    <h4>@companyName</h4>
    <div class="main">
        <label for="companyName">Department Name</label>
        <div class="inpttxt">
            <input type="text"
                   name="companyName"
                   id=""
                   placeholder="Enter department name" 
                   @bind="department.Name"/>
            <input type="text"
                   name="companyName"
                   id=""
                   placeholder="Enter department username"
            @bind="department.UserName" />
            <div class="button">
                <button class="bckgmt" @onclick="save">Add</button>
            </div>
        </div>
        <input @bind=id/>
    </div>
    <div class="dept-list">
        @foreach( var dept in departments.OrderBy(dept => dept.Id))
        {
            <div class="dept-name">@dept.Name</div>
        }
    </div>
    <div class="button">
        <button class="bckgmt">Submit</button>
    </div>
</div>

@code {
    CompanyModel company = new CompanyModel();
    public static string? depName;

    [Parameter]
    public int id { get; set; }

    public DepartmentModel department = new DepartmentModel();

    List<DepartmentModel> departments = new List<DepartmentModel>();

    [Parameter]
    public string companyName{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("api/department/");
        departments = await response.Content.ReadFromJsonAsync<List<DepartmentModel>>();
    }

    protected async Task save()
    {
        var depid = id;
        if (department != null)
        {
            department.CompanyId = id;
            await DepartmentService.AddDepartment(department);
            await JSRuntime.InvokeVoidAsync("alert", "oga e work!");
        }
    }
}
