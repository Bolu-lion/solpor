@page "/complaintlist"
@using SolutionPortalBeta.Shared;
@inject HttpClient _httpClient;

@*<div class="admin-main">
    <Sidebar/>
    <div>
        <div class="top bckgm"><div class="title">Complaints</div></div>
        <div class="recent-orders">
            <table>
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Complaint Description</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in complaintList.OrderByDescending(p => p.Id))
                    {
                        <tr>
                            <td>@p.Title</td>
                            <td>@p.Description</td>
                            <td class="warning">@CheckStatus(p.IsCompleted)</td>
                            <td>@p.DateCreated</td>
                            <td class="primary"><a href="#">Details</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>*@
<div class="admin-main">
    <Sidebar/>
    <div class="comp-list">
        <h1 class="title">Complaints</h1>
        <div class="recent-orders">
            <table>
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Complaint Description</th>
                        <th>Status</th>
                        <th>Date</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in complaintList.OrderByDescending(p => p.Id))
                    {
                        <tr>
                            <td>@p.Title</td>
                            <td>@p.Description</td>
                            <td class="@statusClass">@CheckStatus(p.IsCompleted)</td>
                            <td>@p.DateCreated</td>
                            <td class="primary"><a href="/complaintlist">Details</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    List<UserCompliantModel> complaintList = new List<UserCompliantModel>();
    public string statusClass { get; set; } 

    protected override async Task OnInitializedAsync()
    {

        var response = await _httpClient.GetAsync("api/UserComplaint/");
        complaintList = await response.Content.ReadFromJsonAsync<List<UserCompliantModel>>();
    }

    private string CheckStatus(bool Status)
    {

        if (Status)
        {
            statusClass = "warning";
            return "Resolved";
        }
        else
        {
            statusClass = "done";
            return "Pending";
        }
    }
}
