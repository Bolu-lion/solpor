@page "/logform"
@using SolutionPortalBeta.Shared;
@inject NavigationManager _nav
@inject IJSRuntime JsRuntime
@inject HttpClient Http
@using System.IO

<div class="f-container">
    <h1>Log Complaint</h1>
    <form Model="complaint" class="logform" @onsubmit="Save">
        <div class="forminput">
            <label>Complaint Title</label>
            <input type="text" required @bind="complaint.Title" />
        </div>
        <div class="forminput">
            <label>Complaint Description</label>
            <textarea rows=10 @bind="complaint.Description" />
        </div>
        <div class="forminput">
            <div class="filein">
                <label>Attachments (@fileNames.Count)</label>
                <InputFile multiple OnChange="getFileName" />
            </div>
            <div class="input-file">
                @foreach (var fileName in fileNames)
                {
                    <span>@fileName</span>
                }
            </div>
        </div>
        <button class="submit-modal" type="submit">
            Submit
        </button>
    </form>
</div>

@code {
    UserCompliantModel complaint = new UserCompliantModel();
    public List<string> fileNames = new List<string>();
    public int filecount;
    protected override async Task OnInitializedAsync(){}
    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("api/usercomplaint", complaint);
        UserCompliantModel userCompliant = await response.Content.ReadFromJsonAsync<UserCompliantModel>();
        if (userCompliant?.Id > 0)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Sent Successfully!");
            goBack();
        }
    }

    public void goBack()
    {
        _nav.NavigateTo("home");
    }
    private void getFileName(InputFileChangeEventArgs e)
    {
        filecount = e.FileCount;
        var files = e.GetMultipleFiles(4);
        foreach (var file in files)
        {
            fileNames.Add(file.Name);
        }
    }
}
