@page "/logform"
@using SolutionPortalBeta.Shared;
@inject NavigationManager _nav
@inject IJSRuntime JsRuntime
@inject HttpClient Http

<div class="f-container">
    <div class="main">
        <div class="profile-icon">
            <div class="icon">iCON</div>
            <img src="nic.jpg" alt="" width="45" height="45" />
        </div>
        <div class="top"><div class="title bckgmt">Log Complaint</div></div>
        <div class="mainform">
            <EditForm Model="complaint"  method="post">
                <div class="form-input">
                    <label for="title">Title</label>
                    <input type="text" name="title" placeholder="Enter Title" @bind="complaint.Title"/>
                </div>
                
                <div class="form-input">
                    <label for="complaint">Complaint</label>
                    <textarea name="complaint"
                              id="complaint"
                              rows="10"
                              placeholder="Kindly let us know what problem you're facing" @bind="complaint.Description"></textarea>
                </div>
                <div class="form-input">
                    <label for="Attachment">Attachment:</label>
                    <InputFile ></InputFile>
                </div>
                <div class="form-input">
                    <label for="title">Title</label>
                    <input type="text" name="title" @bind="complaint.Title" />
                </div>
            </EditForm>
        </div>
        <div class="bottom">
            <div class="btmbutton ">
                <button @onclick="Save" class="bckgmt">Submit</button>
            </div>
        </div>
    </div>
</div>

@code {
    UserCompliantModel complaint = new UserCompliantModel();
    private ElementReference fileInput;
    protected override async Task OnInitializedAsync()
    {
    }
    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("api/usercomplaint", complaint);
        UserCompliantModel userCompliant = await response.Content.ReadFromJsonAsync<UserCompliantModel>();
        if (userCompliant?.Id > 0)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Sent Successfully!");

        }
    }
}
